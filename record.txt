2021/2/28 修复了大图片读取错误的问题，原来是因为decode之前没有足够的sleep时间（也就是说图片在没有加密完成时也能读取）
2021/2/28 发现图片读不出来不是因为没有加载完毕的原因，需要研究一下python的二进制读取文件内容 file.seek(0,0)回到原位
2021/3/6 发现大图片在学校的校园网环境下加载的速度很慢
先已大概了解其机制:首先在下载的时间里面进行直接改名为dat，能保证实时，然后上传到网站上进行加密，最后发回数据才修改。但是目前发现即使是五百秒也没有修改迹象，现尝试直接修改后缀。
现在又发现好像是在打开的过程中无法进行修改，因此可以尝试以此方式拦截gif
给你一个我不知道可不可行的思路
微信在加载大图片的时候，我发现是先下载后加密的，且dat文件在下载时是直接预留好大小再进行填充的，填充完毕后进行加密。   加密需要一定时间，你如果能找到下载完毕的时间就直接打开dat文件，那么加密的算法就会被阻拦而不能够进行。

2021/3/7 
发现是可以在打开的时候进行下载的，那么，如何判断下载完毕  还有判断dat文件已经存在

2021/3/8
time 可以写在构造函数里面，看一下源码改造一下
2021/3/10 
通过验证最后两个字节从而确定是否下载完毕，至此图片下载工作正式完成
2021/3/11
开始写机器人定时发送信息
机器人定时发送基本完成
我希望能够把整个程序都使用一个固定的值，以后只需要修改一个就可以了，比如time_setting。这个该如何实现呢？

希望能做到早上定时停止投票。如果能有一个判定某日期是否要投票的参数就比较好
比较一下有参数的架构和目前的架构，从而决定是否要进行改动
当前架构：vote_date由当天-1决定，要控制到早上十点结束则需要另外判断，那就算了，其实投票持续一天也还行的



3/20
已经完成了图片居中的学习，通过  缩略图(通过自己制造然后专门上传一个缩略图)、普通加载，高级加载三种方式来进行展示。为了简单起见，我打算进行缩略图和高级加载直接变换。反正可以自己缩小放大的。

下一步就是后端的  缩略图获得代码(也就是说图片在获得后需要把所有内容删除掉减少空间损失)， 上传图片代码，  修改数据库(图d片的大小以及MD5值)处理相关代码

3/21
完成了上传图片的代码，可以以后尝试一下一个月就新建一个项目来储存图片
3/22
完成了修改数据库的工作，增加了 图片height widwth  md5 以及一些提醒的样式。
TODO:
修改数据库的url部分，将图片居中的内容部署到前端。
在获得url的基本内容后继续修改图片，然后一口气加进去，或者试一下自己的脚本（发现在自己原来四百多张图片的压力下非常慢，一口气手动加上的时候还是靠push吧，在github上就不需要删除文件而直接删除数据库内容就可以了。）